{"version":3,"sources":["components/Transactions/Transaction.module.css","components/Statistic/StatisticComponent.js","components/Statistic/Statisticlistjs.js","components/Frends/icon.png","components/Profil/Profil.js","components/Frends/FrendComponent.js","components/Frends/Frendslist.js","components/Transactions/Transactionslist.js","App.js","index.js"],"names":["module","exports","Statistic","id","label","percentage","className","Statisticlist","items","map","item","style","backgroundColor","Math","random","propsType","title","PropTypes","string","stats","shape","number","name","social","tag","location","avatar","defaultImg","Profillist","src","alt","width","followers","views","likes","FrendsComponent","isOnline","Frendslist","Transactionslist","t","transactionfunction","table","type","amount","currency","App","statistics","frends","Transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40447874.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionfunction\":\"Transaction_transactionfunction__2MaTy\",\"title\":\"Transaction_title__2IBK6\",\"table\":\"Transaction_table__GS3Ya\"};","const Statistic = ({ id, label, percentage }) => {\r\n  return (\r\n    <>\r\n      <span className=\"label\">{label}</span>\r\n      <span className=\"percentage\">{percentage}</span>\r\n    </>\r\n  )\r\n}\r\nexport default Statistic\r\n","import Statistic from './StatisticComponent'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst createRandomBg = () => {\r\n  return `rgb(${(Math.random() * 255) << 0}, ${(Math.random() * 255) << 0}, ${\r\n    (Math.random() * 255) << 0\r\n  })`\r\n}\r\n\r\nfunction Statisticlist({ items }) {\r\n  return (\r\n    <section className=\"sectstatis\">\r\n      <div className=\"contaner-static\">\r\n        <h2 className=\"title2\">Upload stats</h2>\r\n        <ul className=\"stat-list l1\">\r\n          {items.map((item) => (\r\n            <li\r\n              key={item.id}\r\n              style={{ backgroundColor: createRandomBg() }}\r\n              className=\"item2\"\r\n            >\r\n              <Statistic label={item.label} percentage={item.percentage} />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nStatisticlist.propsType = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    label: PropTypes.string,\r\n    percentage: PropTypes.number,\r\n  }),\r\n}\r\n\r\nexport default Statisticlist\r\n","export default __webpack_public_path__ + \"static/media/icon.6c53c0a1.png\";","import social from './user.json'\r\nimport defaultImg from '../Frends/icon.png'\r\nconst { name, tag, location, avatar = defaultImg, stats } = social\r\n\r\nconst Profillist = (\r\n  <div className=\"profile\">\r\n    <div className=\"description\">\r\n      <img\r\n        src={avatar}\r\n        alt=\"Аватар пользователя\"\r\n        className=\"avatar\"\r\n        width=\"200\"\r\n      />\r\n      <p className=\"name\">{name}</p>\r\n      <p className=\"tag\">{tag}</p>\r\n      <p className=\"location\">{location}</p>\r\n    </div>\r\n\r\n    <ul className=\"stats\">\r\n      <li className=\"item\">\r\n        <span className=\"label\">Followers</span>\r\n        <span className=\"quantity\">{stats.followers}</span>\r\n      </li>\r\n      <li className=\"item\">\r\n        <span className=\"label\">Views</span>\r\n        <span className=\"quantity\">{stats.views}</span>\r\n      </li>\r\n      <li className=\"item\">\r\n        <span className=\"label\">Likes</span>\r\n        <span className=\"quantity\">{stats.likes}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n)\r\n\r\nexport default Profillist\r\n","import defaultImg from './icon.png'\r\n\r\nconst FrendsComponent = ({ avatar = defaultImg, name, isOnline, id }) => {\r\n  return (\r\n    <>\r\n      <span\r\n        className=\"status-frends\"\r\n        style={{ backgroundColor: isOnline ? 'green' : 'red' }}\r\n      >\r\n        {isOnline}\r\n      </span>\r\n      <img\r\n        className=\"avatar-frends\"\r\n        src={avatar}\r\n        alt=\"avatar\"\r\n        width=\"48\"\r\n        // height=\"80px\"\r\n      />\r\n      <p className=\"name-frends\">{name}</p>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FrendsComponent\r\n","import FrendsComponent from './FrendComponent'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction Frendslist({ items }) {\r\n  return (\r\n    <div className=\"contaner-frends\">\r\n      <ul className=\"list-frends\">\r\n        {items.map((item) => (\r\n          <li key={item.id} className=\"item-frens\">\r\n            <FrendsComponent\r\n              isOnline={item.isOnline}\r\n              avatar={item.avatar}\r\n              name={item.name}\r\n            />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nFrendslist.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      avatar: PropTypes.string,\r\n      name: PropTypes.string,\r\n      isOnline: PropTypes.bool,\r\n    }),\r\n  ),\r\n}\r\nexport default Frendslist\r\n","import t from './Transaction.module.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction Transactionslist({ items }) {\r\n  return (\r\n    <table className={t.transactionfunction}>\r\n      <thead>\r\n        <tr>\r\n          <th className={t.title}> Type </th>\r\n          <th className={t.title}> Amount </th>\r\n          <th className={t.title}> Currency </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {items.map((item) => (\r\n          <tr key={item.id}>\r\n            <td className={t.table}>{item.type}</td>\r\n            <td className={t.table}>{item.amount}</td>\r\n            <td className={t.table}>{item.currency}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nTransactionslist.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      type: PropTypes.string,\r\n      amount: PropTypes.string,\r\n      currency: PropTypes.string,\r\n    }),\r\n  ),\r\n}\r\n\r\nexport default Transactionslist\r\n","import statistics from './components/Statistic/statistical-data.json'\nimport frends from './components/Frends/Frendsaray.json'\nimport Statisticlist from './components/Statistic/Statisticlistjs.js'\nimport Profillist from './components/Profil/Profil'\nimport Frendslist from './components/Frends/Frendslist'\nimport Transactions from './components/Transactions/Transactions.json'\nimport Transactionslist from './components/Transactions/Transactionslist'\n\nfunction App() {\n  return (\n    <div>\n      {Profillist}\n      <Statisticlist items={statistics} />\n      <Frendslist items={frends} />\n      <Transactionslist items={Transactions} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}